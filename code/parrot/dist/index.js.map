{"version":3,"sources":["../src/index.js"],"names":["vorpal","require","localStorage","use","command","action","args","cb","execSync","uid","log","previous","getItem","key","setItem","value","removeItem","delimiter","show","parse","process","argv"],"mappings":";;AASA;;;;AACA;;;;AACA;;;;;;AAXA;;;;;;;;AAQA,IAAMA,SAASC,QAAQ,QAAR,GAAf;;;AAKAD,OAAOE,YAAP,CAAoB,QAApB;;AAEAF,OAAOG,GAAP;AACAH,OAAOG,GAAP;AACAH,OAAOG,GAAP;;AAGAH,OAAOI,OAAP,CAAe,mBAAf,sDACGC,MADH,CACU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAC1BP,SAAOQ,QAAP,qBAAkCF,KAAKG,GAAvC;AACA,OAAKC,GAAL;AACAH;AACD,CALH;;AAOAP,OAAOI,OAAP,CAAe,0BAAf,EAA2C,gCAA3C,EACGC,MADH,CACU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAC1B,MAAMI,WAAWX,OAAOE,YAAP,CAAoBU,OAApB,CAA4BN,KAAKO,GAAjC,CAAjB;;AAEAb,SAAOE,YAAP,CAAoBY,OAApB,CAA4BR,KAAKO,GAAjC,EAAsCP,KAAKS,KAA3C;;AAEA,MAAIJ,QAAJ,EAAc;AACZ,SAAKD,GAAL,6BAAmCJ,KAAKO,GAAxC;AACD;;AAED,OAAKH,GAAL,CAAYJ,KAAKO,GAAjB,yBAAwCP,KAAKS,KAA7C;AAED,CAZH;;AAcAf,OAAOI,OAAP,CAAe,kBAAf,EAAmC,4CAAnC,EACGC,MADH,CACU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAC1B,OAAKG,GAAL,CAAYJ,KAAKO,GAAjB,mBAAkCb,OAAOE,YAAP,CAAoBU,OAApB,CAA4BN,KAAKO,GAAjC,CAAlC;AACAN;AACD,CAJH;;AAOAP,OAAOI,OAAP,CAAe,oBAAf,EAAqC,mCAArC,EACGC,MADH,CACU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAC1BP,SAAOE,YAAP,CAAoBc,UAApB,CAA+BV,KAAKO,GAApC;AACA,OAAKH,GAAL,CAAYJ,KAAKO,GAAjB;AACAN;AACD,CALH;;AAQAP,OACGiB,SADH,CACa,SADb,EAEGC,IAFH,GAGGC,KAHH,CAGSC,QAAQC,IAHjB","file":"index.js","sourcesContent":["/*\n* Parrot: A sane way to control Proco database.\n* Since we currently don't need it, we don't expose these tasks as library but\n* we are creating an interactive CLI application.\n* Waay easier than writing a dashboard with React.\n* Also faster than writing, testing & deploying Cloud Functions.\n*/\n\nconst vorpal = require('vorpal')();\nimport ACL from './commands/acl';\nimport Playhouse from './commands/playhouse';\nimport AppUsers from './commands/appUsers';\n\nvorpal.localStorage('parrot');\n\nvorpal.use(ACL);\nvorpal.use(Playhouse);\nvorpal.use(AppUsers);\n\n\nvorpal.command('parrot auth <uid>', `Sets an UID to the CLI to use with the Database.`)\n  .action(function (args, cb) {\n    vorpal.execSync(`parrot set uid ${args.uid}`);\n    this.log(`You are now logged-in.`);\n    cb();\n  });\n\nvorpal.command('parrot set <key> <value>', 'Sets a value to local storage.')\n  .action(function (args, cb) {\n    const previous = vorpal.localStorage.getItem(args.key);\n\n    vorpal.localStorage.setItem(args.key, args.value);\n\n    if (previous) {\n      this.log(`Previous value was for ${args.key} was {previous}`)\n    }\n\n    this.log(`${args.key} is *now* set to ${args.value}`);\n\n  });\n\nvorpal.command('parrot get <key>', 'Gets a value for a key from local storage.')\n  .action(function (args, cb) {\n    this.log(`${args.key} is set to ${vorpal.localStorage.getItem(args.key)}`);\n    cb();\n  });\n\n\nvorpal.command('parrot rmkey <key>', 'Removes a key from local storage.')\n  .action(function (args, cb) {\n    vorpal.localStorage.removeItem(args.key);\n    this.log(`${args.key} is now deleted.`);\n    cb();\n  });\n\n\nvorpal\n  .delimiter('parrot$')\n  .show()\n  .parse(process.argv);\n"]}