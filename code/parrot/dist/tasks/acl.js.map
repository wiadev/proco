{"version":3,"sources":["../../src/tasks/acl.js"],"names":["internalRef","ref","groupsRef","usersRef","createCustomToken","uid","additionalClaims","auth","isInGroup","group","child","once","then","data","val","listGroupsFor","Object","keys","resetAccess","groups","updates","forEach","update","set","listMembersFor","setGroupMembership","to"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,cAAc,gBAASC,GAAT,CAAa,UAAb,CAApB;AACA,IAAMC,YAAY,gBAASD,GAAT,CAAa,qBAAb,CAAlB;AACA,IAAME,WAAW,gBAASF,GAAT,CAAa,oBAAb,CAAjB;;AAEO,IAAMG,gDAAoB,SAApBA,iBAAoB,CAACC,GAAD;AAAA,MAAMC,gBAAN,yDAAyB,EAAzB;AAAA,SAC/B,uBAAgBC,IAAhB,GAAuBH,iBAAvB,CAAyCC,GAAzC,EAA8CC,gBAA9C,CAD+B;AAAA,CAA1B;;AAGA,IAAME,gCAAY,SAAZA,SAAY,CAACH,GAAD,EAAMI,KAAN;AAAA,SAAgBP,UACtCQ,KADsC,CAChCD,KADgC,EACzBC,KADyB,CACnBL,GADmB,EACdM,IADc,CACT,OADS,EAEtCC,IAFsC,CAEjC;AAAA,WAASC,KAAKC,GAAL,KAAa,IAAb,GAAoB,KAA7B;AAAA,GAFiC,CAAhB;AAAA,CAAlB;;AAIA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACV,GAAD;AAAA,SAASF,SACnCO,KADmC,CAC7BL,GAD6B,EACxBM,IADwB,CACnB,OADmB,EAEnCC,IAFmC,CAE9B;AAAA,WAAQC,KAAKC,GAAL,EAAR;AAAA,GAF8B,EAGnCF,IAHmC,CAG9B;AAAA,WAASC,OAAOG,OAAOC,IAAP,CAAYJ,IAAZ,CAAP,GAA2B,EAApC;AAAA,GAH8B,CAAT;AAAA,CAAtB;;AAKA,IAAMK,oCAAc,SAAdA,WAAc,CAACb,GAAD;AAAA,SAASF,SACjCO,KADiC,CAC3BL,GAD2B,EACtBM,IADsB,CACjB,OADiB,EAEjCC,IAFiC,CAE5B,gBAAQ;AACZ,QAAMO,SAASN,KAAKC,GAAL,EAAf;AACA,QAAI,CAACK,MAAL,EAAa,OAAO,IAAP;AACb,QAAIC,UAAU,EAAd;AACAJ,WAAOC,IAAP,CAAYE,MAAZ,EAAoBE,OAApB,CAA4B,iBAAS;AACnCD,cAAWX,KAAX,SAAoBJ,GAApB,IAA6B,IAA7B;AACD,KAFD;AAGA,WAAOH,UAAUoB,MAAV,CAAiBF,OAAjB,EAA0BR,IAA1B,CAA+B;AAAA,aAAMT,SAASO,KAAT,CAAeL,GAAf,EAAoBkB,GAApB,CAAwB,IAAxB,CAAN;AAAA,KAA/B,CAAP;AACD,GAViC,CAAT;AAAA,CAApB;;AAYA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACf,KAAD;AAAA,SAAWP,UACtCQ,KADsC,CAChCD,KADgC,EACzBE,IADyB,CACpB,OADoB,EAEtCC,IAFsC,CAEjC;AAAA,WAASC,OAAOG,OAAOC,IAAP,CAAYJ,KAAKC,GAAL,EAAZ,CAAP,GAAiC,EAA1C;AAAA,GAFiC,CAAX;AAAA,CAAvB;;AAIA,IAAMW,kDAAqB,SAArBA,kBAAqB,CAACpB,GAAD,EAAMI,KAAN,EAAaiB,EAAb;AAAA,SAChCvB,SAASO,KAAT,CAAeL,GAAf,EAAoBK,KAApB,CAA0BD,KAA1B,EAAiCc,GAAjC,CAAqCG,EAArC,EAAyCd,IAAzC,CAA8C;AAAA,WAC5CV,UAAUQ,KAAV,CAAgBD,KAAhB,EAAuBC,KAAvB,CAA6BL,GAA7B,EAAkCkB,GAAlC,CAAsCG,EAAtC,CAD4C;AAAA,GAA9C,CADgC;AAAA,CAA3B","file":"acl.js","sourcesContent":["import { firebaseAppROOT, database } from '../utils';\n\nconst internalRef = database.ref('internal');\nconst groupsRef = database.ref('internal/acl/groups');\nconst usersRef = database.ref('internal/acl/users');\n\nexport const createCustomToken = (uid, additionalClaims = {}) =>\n  firebaseAppROOT.auth().createCustomToken(uid, additionalClaims);\n\nexport const isInGroup = (uid, group) => groupsRef\n  .child(group).child(uid).once('value')\n  .then(data => (data.val() ? true : false));\n\nexport const listGroupsFor = (uid) => usersRef\n  .child(uid).once('value')\n  .then(data => data.val())\n  .then(data => (data ? Object.keys(data) : []));\n\nexport const resetAccess = (uid) => usersRef\n  .child(uid).once('value')\n  .then(data => {\n    const groups = data.val();\n    if (!groups) return true;\n    let updates = {};\n    Object.keys(groups).forEach(group => {\n      updates[`${group}/${uid}`] = null;\n    });\n    return groupsRef.update(updates).then(() => usersRef.child(uid).set(null));\n  });\n\nexport const listMembersFor = (group) => groupsRef\n  .child(group).once('value')\n  .then(data => (data ? Object.keys(data.val()) : []));\n\nexport const setGroupMembership = (uid, group, to) =>\n  usersRef.child(uid).child(group).set(to).then(() =>\n    groupsRef.child(group).child(uid).set(to)\n  );\n"]}